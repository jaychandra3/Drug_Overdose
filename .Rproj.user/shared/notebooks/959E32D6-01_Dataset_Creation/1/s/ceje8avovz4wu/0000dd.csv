"0","country[country == 'Suppressed'] <- NA"
"0","country$Deaths = as.numeric(country$Deaths)"
"0",""
"0","t_Country = ts(country$Deaths[1:(length(country$Deaths) - 18)], start = decimal_date(as.Date(""2015-01-01"")), frequency = 12)"
"0",""
"0","parameters = expand.grid(p = seq(0, 2), d = seq(0, 2), q = seq(0, 1),"
"0","            P = seq(0, 1), D = seq(0, 1), Q = seq(0, 1))"
"0",""
"0","best_aic = 10000"
"0","for (i in seq(1, nrow(parameters))){"
"0","  fit <- Arima(t_Country, order = c(parameters$p[i], parameters$d[i], parameters$q[i]),"
"0","                    seasonal = c(parameters$P[i], parameters$D[i], parameters$Q[i]), method=""ML"")"
"0","  aic = fit[[""aicc""]]"
"0","  if (aic<best_aic){"
"0","    best_aic = aic"
"0","    best_fit = fit"
"0","    best_params = parameters[i, ]"
"0","  }"
"0","  "
"0","}"
"0","# fit <- Arima(t_Country, order = c(1, 1, 1),"
"0","#                      seasonal = c(1, 0, 1), method=""ML"")"
"0","f_fit<-forecast(best_fit, h = 18, robust = TRUE, level = 95)"
"2","The non-existent robust arguments will be ignored."
"0","# Confidence Interval Calculation Attempt 1"
"0","# sim <- matrix(NA, ncol=18,nrow=1000)"
"0","# for(i in 1:1000)"
"0","#   sim[i,] <- simulate(fit,18, future=TRUE)"
"0","# se <- apply(sim,2,sd)/sqrt(1000)"
"0","# f_fit$upper <- f_fit$mean + 1.96*se"
"0","# f_fit$lower <- f_fit$mean - 1.96*se"
"0",""
"0","# Confidence Interval Attempt 2"
"0","# f_fit$upper <- f_fit$mean + 1.96*sqrt(fit$sigma2)"
"0","# f_fit$lower <- f_fit$mean - 1.96*sqrt(fit$sigma2)"
"0",""
"0","t_Country2 = ts(country$Deaths[(length(country$Deaths) - 17):length(country$Deaths)], start = decimal_date(as.Date(""2020-03-01"")), frequency = 12)"
"0",""
"0","model_name = paste('SARIMA(', best_params[1], best_params[2], best_params[3], ')(', best_params[4], best_params[5], best_params[6], ')[12]')"
"0","autoplot(t_Country, series=""Data"", size = 0.7) + "
"0","   autolayer(fit$fitted, series= model_name, size = 0.5) +"
"0","   autolayer(f_fit, series=""Prediction"") +"
"0","   autolayer(t_Country2, series = ""True Post-Pandemic"") +"
"0","  xlab(""Year"") + ylab(""Drug Overdose Deaths"") + ggtitle(""United States"") + theme_bw()+theme(legend.title = element_blank(),legend.position = ""bottom"")"

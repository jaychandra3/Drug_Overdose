"0","# Prediction (death count, adolescents)"
"0","country_arr = country$Deaths[1:(length(country$Deaths) - 18)]"
"0","country_arr2 = country$Deaths[(length(country$Deaths) - 17):length(country$Deaths)]"
"0","loess_model <- loess(country_arr ~ as.numeric(1:length(country_arr)), control = loess.control(surface = ""direct""))"
"0","fit_loess = predict(loess_model,se=TRUE)"
"0","predict_loess = predict(loess_model,as.numeric((length(country_arr) + 1):(length(country_arr) + 18)), se = TRUE)"
"0",""
"0","x = as.numeric(1:length(c(country_arr, country_arr2 )))"
"0",""
"0","df_plots <- data.frame(matrix(nrow = length(country$Deaths), ncol = 4))"
"0","colnames(df_plots) <- c('x', 'mean', 'upper', 'lower')"
"0",""
"0","df_plots$x <- x"
"0","df_plots$mean = c(fit_loess$fit, predict_loess$fit)"
"0","df_plots$lower = c((fit_loess$fit - 1.96*fit_loess$se.fit), (predict_loess$fit - 1.96*predict_loess$se.fit))"
"0","df_plots$upper = c((fit_loess$fit + 1.96*fit_loess$se.fit), (predict_loess$fit + 1.96*predict_loess$se.fit))"
"0","df_plots$actual = country$Deaths"
"0",""
"0","ggplot(df_plots, aes(x=x,y=mean, ymin=lower, ymax=upper)) + "
"0","geom_line() + "
"0","geom_ribbon(alpha=0.3) + "
"0","geom_line(aes(y=actual)) + "
"0","theme_bw()"

{"frames":[{"func":"tryCatch({\n    Arima(t_State, order = c(parameters$p[j], parameters$d[j], \n        parameters$q[j]), seasonal = c(parameters$P[j], parameters$D[j], \n        parameters$Q[j]), method = \"ML\") ...","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"Arima(t_State, order = c(parameters$p[j], parameters$d[j], parameters$q[j]), \n    seasonal = c(parameters$P[j], parameters$D[j], parameters$Q[j]), \n    method = \"ML\")","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"suppressWarnings(tmp <- stats::arima(x = x, order = order, seasonal = seasonal, \n    include.mean = include.mean, method = method, ...))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"withCallingHandlers(expr, warning = function(w) invokeRestart(\"muffleWarning\"))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"stats::arima(x = x, order = order, seasonal = seasonal, include.mean = include.mean, \n    method = method, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"optim(init[mask], armafn, method = optim.method, hessian = TRUE, \n    control = optim.control, trans = as.logical(transform.pars))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"(function (par) \nfn(par, ...))(c(0.137597873332245, -0.665384520221742))","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"fn(par, ...)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatch(upARIMA(mod, trarma[[1L]], trarma[[2L]]), error = function(e) NULL)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchList(expr, classes, parentenv, handlers)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"tryCatchOne(expr, names, parentenv, handlers[[1L]])","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0},{"func":"doTryCatch(return(expr), name, parentenv, handler)","file":"","line_number":0,"end_line_number":0,"character_number":0,"end_character_number":0}],"message":"Error in base::try(California$Deaths, silent = TRUE) : \n  object 'California' not found\n"}